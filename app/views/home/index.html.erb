<% content_for :title, "Alex Clemmer" %>

<div id="splash">
  <p>
    <em>Alex Clemmer</em> obtained a BS in computer science from a <i>middle-of-the-road</i> state school in 2013. He had an <i>ok-but-not-great</i> GPA. 3 out of 5 officemates agree that Alex has programmed before.
  </p>

  <p>
    Alex is mostly known for <%= link_to 'turning Snapchat into a remote filesystem', "#snapchat-fs" %>, <%= link_to 'porting lisp to the Apple //e', "#turtles" %>, and <%= link_to 'implementing Python 3 in a couple thousand lines of Haskell', "#pyli" %>.
  </p>

  <p>
    Alex is currently employed at <%= link_to 'Microsoft', 'http://www.microsoft.com/' %>.
  </p>


	<%= render '/splashnav' %>



  <hr>

  <a name="hack"></a>
  <h1>#HACK</h1>
  <h3>Some nifty recent work I did in my free time</h3>

  <p>
    <a name="snapchat-fs"></a>
    <em>Snapchat FS</em> &#8212;
    [<%= link_to 'code', 'https://github.com/hausdorff/snapchat-fs' %>]
    <br/>

    I reverse engineered Snapchat's private API. Snapchat FS is a client I wrote (with some help from <%= link_to '@pencilo', 'https://github.com/pencilo' %> ) that allows you to use Snapchat to store and manage arbitrary files.
  </p>

  <p>
    <a name="turtles"></a>
    <em>Turtles: turns Apple //e -> lisp machine</em> &#8212;
    [<%= link_to 'video', 'https://www.youtube.com/watch?v=tey9sFqICSk' %>,
    <%= link_to 'writeup', 'http://blog.nullspace.io/apple-2-lisp-part-1.html' %>,
    <%= link_to 'code', 'https://github.com/hausdorff/turtles' %>]

    <br/>

    Wrote code to send the assembled lisp interpreter binary from a laptop through the audio jack, to the Apple //e, which then stores the lisp and opens up a REPL.
  </p>

  <p>
    <a name="pyli"></a>
    <em>pyli&#8212;Python 3 compiler in &lt; 4000 lines of code</em> &#8212;
    [<%= link_to 'writeup', 'http://blog.nullspace.io/obvious-python-parser.html' %>,
    <%= link_to 'code', 'http://github.com/hausdorff/pyli/blob/master/src/Parser.hs' %>]
   <br/>

    Writing parsers and lexers is really hard. I wondered if I could write a parser for almost all of Python that anyone could understand. As soon as I finish the AST-to-bytecode step, this will be a complete compiler, but for now it's "only" a parser and lexer.
  </p>

  <p>
    <em>Completely transition all state serialization in Storm (Twitter's stream processing system) from the Java stock serializer to a type-annotated JSON</em> &#8212;
    [<%= link_to 'code', 'https://github.com/nathanmarz/storm/pull/625' %>]
    <br/>

    <%= link_to 'Storm', 'https://github.com/nathanmarz/storm/' %> is a stream processing system from Backtype (acquired by Twitter).

    Storm used to use Java's stock serialization capabilities to persist system state (useful, <i>e.g.</i>, for checkpointing and reliability purposes).

    This patch completely replaces stock Java serialization with a type-annotated JSON called EDN.

    This solves issues <%= link_to '#419', 'https://github.com/nathanmarz/storm/issues/419' %> and <%= link_to '#525', 'https://github.com/nathanmarz/storm/issues/525' %>, and supersedes pull request <%= link_to '#497', 'https://github.com/nathanmarz/storm/pull/497' %>.
  </p>

  <p>
    <em>Adding Haskell's <tt>where</tt> keyword to OCaml</em> &#8212;
    [<%= link_to 'writeup', 'http://blog.nullspace.io/adding-haskells-where-to-ocaml.html' %>,
    <%= link_to 'code', 'https://github.com/hausdorff/ocaml-where' %>]
   <br/>

    Writing parsers and lexers is really hard. I wondered if I could write a parser for almost all of Python that anyone could understand. As soon as I finish the AST-to-bytecode step, this will be a complete compiler, but for now it's "only" a parser and lexer.
  </p>


  <hr>

  <a name="about"></a>
  <h1>#ABOUT</h1>
  <h3>Here is how you can find me and stuff</h3>

  <p>
    I organize <%= link_to 'Hack and Tell Seattle', 'http://seattle.hackandtell.org' %>. You can find me elsewhere:
  </p>

  <p>
    <ul>
      <li>Twitter: <%= link_to '@hausdorff_space', 'http://twitter.com/hausdorff_space' %></li>
      <li>GitHub: <%= link_to '@hausdorff', 'http://github.com/hausdorff' %></li>
      <li>Email: <%= mail_to 'clemmer.alexander@gmail.com' %></li>
    </ul>
  </p>

</div>
